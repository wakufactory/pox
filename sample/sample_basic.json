{"m":"//settings\nPOX.setting={\n\tname:\"sample_basic\",\n\tscale:1.0\n};\nPOX.init=function(){\n//scenedata\n\tvar r3=1.0/Math.sqrt(3);\n\n\tvar scene={\n\t\tenv:{clear_color:[0.2,0.2,0.4,1.0],cull:false},\n\t\tvs_uni:{\n\t\t\tcol:[1.0,0.2,1.0,1.0]\n\t\t},\n\t\tfs_uni:{\n\t\t\tlvec:[1.0,1.0,1.0],\n\t\t\tmode:0\n\t\t},\n\t\tmodel:[\n\t\t\t{geo:{mode:\"tri\",\n\t\t\t\tvtx_at:[\"position\",\"norm\"],\n\t\t\t\tvtx:[1,0,0,r3,r3,r3,0,1,0,r3,r3,r3,0,0,1,r3,r3,r3],\n\t\t\t\tidx:[0,1,2]},\n\t\t\t\tvs_uni:{col:[1.0,0.0,0.0,1.0]}},\n\t\n\t\t{name:\"axis\",\n\t\t\tgeo:{mode:\"lines\",\n\t\t\t\tvtx_at:[\"position\"],\n\t\t\t\tvtx:[0,0,0,200,0,0,0,0,0,0,200,0,0,0,0,0,0,200]},\n\t\t\tfs_uni:{bcolor:[1.0,1.0,1.0,1.0],mode:1}},\n\t\t]\n\t}\n\treturn scene;\n}\n//sceneupdate\nPOX.update=function(render,cam,time){\n\tvar ret={};\n\treturn ret;\n\tvar m=render.getModelData(0);\n\trender.data.model[0].mm=new CanvasMatrix4().rotate(time/5060,1,0,0);\n\treturn ret;\n}\t\n","vs":"attribute vec3 position;\nattribute vec3 norm;\nattribute vec2 uv ;\n\nuniform mat4 mvpMatrix;\nuniform mat4 invMatrix;\nuniform vec4 col ;\n\nvarying vec3 tnorm ;\nvarying vec4 color ;\n\nvoid main() {\n\tvec2 uv2 = uv ;\n\tcolor = col ;\n\ttnorm = (invMatrix * vec4(norm,0.0)).xyz ;\n\tgl_Position = mvpMatrix * vec4(position, 1.0) ;\n}\n","fs":"precision highp float;\nuniform int mode ;\nuniform vec4 bcolor ;\nuniform vec3 eyevec ;\nuniform vec3 lvec ;\t\n\nvarying vec3 tnorm ;\nvarying vec4 color ;\n\nvoid main() {\n\tvec3 col = color.xyz ;\n\tvec3 norm = normalize(tnorm) ;\n\tfloat diff= clamp((dot(norm,normalize(lvec))+0.5)/1.5,0.0,1.0);\n\tfloat spec= pow(clamp(dot(norm,normalize(normalize(lvec)+normalize(eyevec))),0.0,1.0),60.0);\n\tvec3 fcolor = col * (diff * 0.8 + 0.2) + vec3(0.6,0.6,1.0)*(spec * 0.8);\n\tgl_FragColor = (mode!=1) ? vec4(fcolor,color.w):vec4(bcolor.x,bcolor.y,bcolor.z,1.0);\n}\n","version":"0.1"}