{"m":"//settings\nPOX.setting={\n\tname:\"sample_spheremap\",\n\tscale:1.0\n};\n\n//scenedatass\n\tvar sky = new WWModel();\n\tsky.primitive(\"sphere\",{div:20,wx:100,wy:100,wz:100,ninv:true});\n\tvar sp = new WWModel();\n\tsp.primitive(\"sphere\",{div:40,wx:1,wy:1,wz:1});\n\t\n\tvar scene={\n\t\tenv:{clear_color:[0.0,0.0,0.0,1.0],cull:false},\n\t\tvs_uni:{\n\t\t    col:[0.5,0.5,1.0,1.0]\n\t\t},\n\t\tfs_uni:{\n\t\t\tlvec:[-0.01,0.5,1],\n\t\t\ttex1:0,\n\t\t\tmode:0\n\t\t},\n\t\ttexture:[\n\t\t\t{src:\"sample/sphere_minatomirai.jpg\"}\n\t\t\t// photo by https://www.caret-works.net/other/other.html\n\t\t],\n\t\tmodel:[\n\t\t\t{geo:sky.objModel(),\n\t\t\tfs_uni:{mode:0}\n\t\t\t},\n\t\t\t{geo:sp.objModel(),\n\t\t\tbm:new CanvasMatrix4().translate(0,0,0),\n\t\t\tfs_uni:{mode:2}\n\t\t\t},\n\t\n\t\t{name:\"axis\",\n\t\t\tgeo:{mode:\"lines\",\n\t\t\t\tvtx_at:[\"position\"],\n\t\t\t\tvtx:[0,0,0,200,0,0,0,0,0,0,200,0,0,0,0,0,0,200]},\n\t\t\tfs_uni:{bcolor:[1.0,1.0,1.0,1.0],mode:1}},\n\t\t]\n\t}\nthis.setScene(scene) ;\n\n//sceneupdate\nPOX.update=function(render,cam,time){\n\tvar ret={};\n\tvar m=render.getModelData(0);\n//\trender.data.model[0].mm = new CanvasMatrix4().rotate(time/30,0,1,0);\n\treturn ret;\n}\t\n","vs":"attribute vec3 position;\nattribute vec3 norm;\nattribute vec2 uv ;\n\nuniform mat4 modelMatrix;\nuniform mat4 mvpMatrix;\nuniform mat4 invMatrix;\nuniform vec4 col ;\n\nvarying vec3 tpos ;\nvarying vec3 tnorm ;\nvarying vec4 color ;\nvarying vec2 texCoord;\n\nvoid main() {\n\tvec2 uv2 = uv ;\n\tcolor = col ;\n\ttexCoord\t= vec2(1.0-uv.x,1.0-uv.y);\n\ttpos = (modelMatrix * vec4(position,1.0)).xyz ;\n\ttnorm = (invMatrix * vec4(norm,0.0)).xyz ;\n\tgl_Position = mvpMatrix * vec4(position, 1.0) ;\n}\n","fs":"precision highp float;\nuniform int mode ;\nuniform vec4 bcolor ;\nuniform vec3 eyevec ;\nuniform vec3 lvec ;\t\nuniform sampler2D tex1;\n\nvarying vec3 tpos ;\nvarying vec3 tnorm ;\nvarying vec4 color ;\nvarying vec2 texCoord;\n\nvoid main() {\n\tconst float PI = radians(180.0) ;\n\tconst float PI2 = PI+PI ;\n\tvec3 norm = normalize(tnorm) ;\n\tvec2 tc = texCoord ;\n\tif(mode==2) {\n\t\tvec3 ref = normalize(reflect(tpos - eyevec, norm));\n\t\ttc = vec2(\n\t\t\t\t0.75-(sign(ref.x)*acos(ref.z/sqrt(ref.x*ref.x+ref.z*ref.z))/PI+1.0)/2.0,\n\t\t\t\tacos(ref.y)/PI\n\t\t\t) ;\n\t}\n\tvec3 col = texture2D(tex1, tc).xyz ;\n\t\n\tfloat diff= clamp((dot(norm,normalize(lvec))+0.5)/1.5,0.0,1.0);\n\tfloat spec= pow(clamp(dot(norm,normalize(normalize(lvec)+normalize(eyevec))),0.0,1.0),20.0);\n\tvec3 fcolor = col * (diff * 0.2 + 0.8) + vec3(1.0,1.0,1.0)*(spec * 0.4);\n\tgl_FragColor = (mode==1) ? vec4(bcolor.x,bcolor.y,bcolor.z,1.0):vec4(fcolor,color.w);\n}\n","version":"0.1"}